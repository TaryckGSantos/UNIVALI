#include <iostream>
using namespace std;

#include <vector>

class Jogador{
private:
    string nome;
    int idade;
    vector<Jogo> jogo;
    string posicao;
    int id;
public:
    Jogador(string nome, int idade, string jogo, string posicao, int id){
        this->nome = nome;
        this->idade = idade;
        this->jogo = jogo;
        this->posicao = posicao;
        this->id = id;
    }
    void mostrar(){
        cout << "Player: " << this->nome << "\n\n";
        cout << "Idade: " << this->idade << "\n\n";
        cout << "Game: " << this->jogo << "\n\n";
        cout << "Posição in Game: " << this->posicao << "\n\n";
        cout << "ID do player: " << this->id << "\n\n";
    }
    int getID(){
        return this->id;
    }
    void inserir_player(vector<Jogador> &player, string nome, int idade, string jogo, string posicao, int id){
        player.push_back(Jogador(nome,idade,jogo,posicao,id));
    }

    void mostrar_players(vector<Jogador> &player){
        for(int i = 0; i < player.size(); i++){
            player[i].mostrar();
        }
    }
};

class Time{
private: 
    string nome;
    vector<Jogo> jogo;
    vector<Jogador> jogadores;
    
public:
    Time(string nome, string jogo) {
        this->nome = nome;
        this->jogo = jogo;
    }
    void inserir_player(vector<Jogador> &player, string nome, int idade, string jogo, string posicao, int id){
        player.push_back(Jogador(nome,idade,jogo,posicao,id));
    }

    void mostrar_players(vector<Jogador> &player){
        for(int i = 0; i < player.size(); i++){
            player[i].mostrar();
        }
    }
    
    void remover_players(int id) {
        for (auto it = jogadores.begin(); it != jogadores.end(); ++it) {
            if (it->getID() == id) {
                jogadores.erase(it);
                break;
            }
        }
    }
    /*void excluir_player(int id){
    for(auto i = jogadores.begin(); i != jogadores.end(); ++i){
        if(i->getID() == id){
            jogadores.erase(i);
        }
    }
}*/
};

class Campeonato{
private: 
    string nome;
    vector<Jogo> jogo;
    vector<Time> times;
public: 
    Campeonato(string nome, string jogo) {
        this->nome = nome;
        this->jogo = jogo;
    }
    void inserir_time(Time time) {
        times.push_back(time);
    }
    void remover_time(string nomeTime) {
        for (auto it = times.begin(); it != times.end(); ++it) {
            if (it->getNome() == nomeTime) {
                times.erase(it);
                break;
            }
        }
    }
    void buscar_time(string nomeTime) {
        for (auto& time : times) {
            if (time.getNome() == nomeTime) {
                return &time;
            }
        }
        return nullptr;
    }
};

class Jogo {
private:
    string nome;
    int id;
    vector<string> jogos;
public:
    Jogo(string nome) {
        this->nome = nome;
    }
    string getNome(){
        return this->nome;
    }
    void criar_jogo(string jogo) {
        jogos.push_back(jogo);
    }
    void verJogos() {
        for (const string& jogo : jogos) {
            cout << jogo << "\n";
        }
    }
};

/*void excluir_player(vector<Jogador> &player, int id){
    for(auto i = player.begin(); i != player.end(); ++i){
        if(i->getID() == id){
            player.erase(i);
        }
    }
}*/

int main()
{
    int menu, menu_camp, menu_times;
    string jogo, nome_camp, nome_time;
    
    vector<Jogo> jogos;
    
    do{
        cout << "1 - Menu de campeonatos";
        cout << "2 - Menu de times";
        cout << "3 - Menu de Players\n\n";
        cin >> menu;
        
        switch(menu){
            case 1:
                system("cls");
                cout << "1 - Cadastrar campeonato";
                cout << "\n2 - Remover campeonato";
                cout << "\n3 - Buscar campeonato";
                cout << "\n4 - Ver todos os campeonatos";
                cin >> menu_camp;
                if (menu_camp == 1){
                    system("cls");
                    cout << "Nome do campeonato: ";
                    cin >> nome_camp;
                    cout << "Qual o jogo? Jogos disponíveis: ";
                    for(int i = 0; int i < jogos.size(); i++){
                        string nome_jgo = jogos[i].getNome();
                        cout << nome_jgo << "\n";
                    }
                    cin >> jogo;
                }
            break;
            
            case 2:
                system("cls");
                cout << "1 - Cadastrar time";
                cout << "\n2 - Remover time";
                cout << "\n3 - Buscar time";
                cout << "\n4 - Ver todos os times";
                cin >> menu_times;
                if (menu_times == 1){
                    system("cls");
                    cout << "Nome do time: ";
                    cin >> nome_time;
                    cout << "Qual o jogo? Jogos disponíveis: ";
                    for(int i = 0; int i < jogos.size(); i++){
                        string nome_jgo = jogos[i].getNome();
                        cout << nome_jgo << "\n";
                    }
                    cin >> jogo;
                    
                }
            break;
        }
        system("cls");
        cout << "1 - Cadastrar campeonato";
        cout << "\n2 - Remover campeonato";
        cout << "\n3 - Buscar campeonato";
        cout << "\n4 - Ver todos os campeonatos";
    }
}
